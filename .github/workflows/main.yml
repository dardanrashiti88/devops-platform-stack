name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3  # Update to v3 of actions/cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build frontend Docker image
      - name: Build frontend image
        run: |
          docker buildx build --file ./docker/frontend/Dockerfile --tag dardanrashiti88/devops-platform-stack-frontend:latest --push .

      # Build backend Docker image
      - name: Build backend image
        run: |
          docker buildx build --file ./docker/backend/Dockerfile --tag dardanrashiti88/devops-platform-stack-backend:latest --push .

      # Build database Docker image
      - name: Build database image
        run: |
          docker buildx build --file ./docker/db/Dockerfile --tag dardanrashiti88/devops-platform-stack-db:latest --push .

      # Build nginx Docker image (if needed)
      - name: Build nginx image
        run: |
          docker buildx build --file ./docker/nginx/Dockerfile --tag dardanrashiti88/devops-platform-stack-nginx:latest --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the code again for deployment
      - name: Checkout code
        uses: actions/checkout@v2

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Deploy to Docker
      - name: Deploy to Docker
        run: |
          docker-compose -f docker-compose.yml up -d --build
